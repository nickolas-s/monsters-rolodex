{"version":3,"sources":["components/card/card.componet.jsx","components/card-list/card-list.componet.jsx","components/search-box/search-box.component.jsx","App.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SeachBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","response","json","users","this","console","log","filteredMonsters","filter","toLowerCase","includes","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAceA,G,MAXF,SAACC,GAAD,OACX,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEL,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCEPC,G,MARE,SAACR,GAAD,OACf,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCKVM,G,MATE,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACf,uBACEZ,UAAU,SACVa,KAAK,QACLF,YAAaA,EACbG,SAAUF,MC0CCG,G,wDA5Cb,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IAoBRa,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SApBtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJE,E,kMAUH,6C,SACWI,MADX,8C,cACNC,E,gBACcA,EAASC,O,OAAvBC,E,OAENC,KAAKT,SAAS,CAAET,SAAUiB,I,kDAE1BE,QAAQC,IAAR,MACAD,QAAQC,IAAI,uB,+IAQN,IAAD,EAC2BF,KAAKL,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZW,EAAmBrB,EAASsB,QAAO,SAAC3B,GAAD,OACvCA,EAAQE,KAAK0B,cAAcC,SAASd,EAAYa,kBAGlD,OACE,sBAAK/B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAcc,KAAKd,eAErB,cAAC,EAAD,CAAUJ,SAAUqB,W,GAvCVI,IAAMC,Y,MCAxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e770caeb.chunk.js","sourcesContent":["import React from 'react';\nimport './card.style.css';\n\nconst Card = (props) => (\n  <div className=\"card-container\">\n    <img\n      alt=\"monster\"\n      src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n    />\n    <h2>{props.monster.name}</h2>\n    <p>{props.monster.email}</p>\n  </div>\n);\n\nexport default Card;\n","import React from 'react';\nimport Card from '../card/card.componet';\nimport './card-list.styles.css';\n\nconst CardList = (props) => (\n  <div className=\"card-list\">\n    {props.monsters.map((monster) => (\n      <Card key={monster.id} monster={monster} />\n    ))}\n  </div>\n);\n\nexport default CardList;\n","import React from 'react';\nimport './search-box.styles.css';\n\nconst SeachBox = ({ placeholder, handleChange }) => (\n  <input\n    className=\"search\"\n    type=\"searh\"\n    placeholder={placeholder}\n    onChange={handleChange}\n  />\n);\n\nexport default SeachBox;\n","import React from 'react';\nimport CardList from './components/card-list/card-list.componet';\nimport SeachBox from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      monsters: [],\n      searchField: '',\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const url = 'https://jsonplaceholder.typicode.com/users';\n      const response = await fetch(url);\n      const users = await response.json();\n\n      this.setState({ monsters: users });\n    } catch (err) {\n      console.log(err);\n      console.log('There was an error!');\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SeachBox\n          placeholder=\"search monsters\"\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}